name: CDN Deployment (Cloudflare)

on:
  push:
    branches:
      - main
  workflow_dispatch:

defaults:
  run:
    shell: bash
    working-directory: ./web

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Build
        uses: docker/build-push-action@v6
        with:
          load: true
          tags: front-end:latest
          target: prod
          context: web
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Deploy to Cloudflare Pages
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        run: |
          BUILD_CONTAINER=$(docker run -d front-end:latest)
          
          docker cp $BUILD_CONTAINER:/app/web/dist .
          
          docker run --rm -i -e CLOUDFLARE_API_TOKEN -e CLOUDFLARE_ACCOUNT_ID -v ./dist:/data node:alpine cd /data && npx wrangler pages publish dist --project-name i-dont-know-docker --branch main

      # - name: Purge Cloudflare Cache
      #   env:
      #     CLOUDFLARE_ZONE_ID: ${{ secrets.CLOUDFLARE_ZONE_ID }}
      #     CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
      #   run: |
      #     curl -X POST "https://api.cloudflare.com/client/v4/zones/$CLOUDFLARE_ZONE_ID/purge_cache" \
      #     -H "Authorization: Bearer $CLOUDFLARE_API_TOKEN" \
      #     -H "Content-Type: application/json" \
      #     --data '{"purge_everything":true}'
